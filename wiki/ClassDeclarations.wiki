#summary Declaration of classes.
<wiki:toc max_depth="3"/>

= Class declaration =
The syntax to declare a class is specified by:
<em><pre>
class-declaration:
    annotations,,opt,, class-modifiers,,opt,, *partial*,,opt,, *class* identifier type-parameter-list,,opt,, type-base,,opt,, 
        type-parameter-constraints-clauses,,opt,, class-body *;*,,opt,,
</pre></em>

= Class modifiers =
The class modifiers in Stab have the same usage and semantic as the class modifiers in Java, except the {{{static}}} modifier which means that a class is the container of extension methods.
<em><pre>
class-modifiers:
    class-modifier
    class-modifiers class-modifier
    
class-modifier:
    *One of public protected private abstract final static*
</pre></em>

= Type parameter list =
The type parameter list specifies the type parameters of a generic type.
<em><pre>
type-parameter-list:
    *<* identifier-list *>* 
    
identifier-list:
    identifier
    identifier-list *,* identifier
</pre></em>
For example:
{{{
class C<T, U> {}
}}}

= Type base specification =
The type base specification is the base class followed by the implemented interfaces. If the base class is omitted, the superclass is {{{java.lang.Object}}}.
<em><pre>
type-base:
    *:* type-list
    
type-list:
    class-type
    type-list *,* class-type
</pre></em>
For example:
{{{
class A {}
interface B {}
class C : A, B {} // C extends A and implements B
}}}

= Type parameter constraints clauses =
The type parameter constraints clauses defines the base types of the type parameters of the class.
<em><pre>
type-parameter-constraints-clauses:
    type-parameter-constraints-clause
    type-parameter-constraints-clauses type-parameter-constraints-clause
    
type-parameter-constraints-clause:
    *where* identifier *:* type-base
</pre></em>
The type parameter of a generic class can be constrained to implement {{{java.lang.Runnable}}} the following way:
{{{
using java.lang;
class C<T> where T : Runnable {}
}}}

= Class body =
The class body is the place where the members of a class are declared.
<em><pre>
class-body:
    *{* class-member-declarations,,opt,, *}* 
    
class-member-declarations:
    class-member-declaration
    class-member-declarations class-member-declaration
    
class-member-declaration:
    field-declaration
    method-declaration
    property-declaration
    indexer-declaration
    constructor-declaration
    destructor-declaration
    static-constructor-declaration
    class-declaration
    interface-declaration
    enum-declaration
    delegate-declaration
</pre></em>